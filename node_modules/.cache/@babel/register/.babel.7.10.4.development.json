{
  "{\"sourceRoot\":\"C:\\\\Users\\\\senaru\\\\linkedin\\\\reactblog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\senaru\\\\linkedin\\\\reactblog-backend\",\"filename\":\"C:\\\\Users\\\\senaru\\\\linkedin\\\\reactblog-backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\senaru\\\\linkedin\\\\reactblog-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\senaru\\linkedin\\reactblog-backend",
      "filename": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\senaru\\linkedin\\reactblog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// const articlesInfo = ;\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.post('/api/articles/:name/upvote', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var articleName, client, db, articleInfo, updatedArticleInfo;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            articleName = req.params.name;\n            _context.next = 4;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 4:\n            client = _context.sent;\n            db = client.db('reactblog');\n            _context.next = 8;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 8:\n            articleInfo = _context.sent;\n            _context.next = 11;\n            return db.collection('articles').updateOne({\n              name: articleName\n            }, {\n              '$set': {\n                upvotes: articleInfo.upvotes + 1\n              }\n            });\n\n          case 11:\n            _context.next = 13;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 13:\n            updatedArticleInfo = _context.sent;\n            ;\n            res.status(200).json(updatedArticleInfo);\n            client.close();\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error Connecting to db\",\n              e: _context.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var articleName = req.params.name;\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  articlesInfo[articleName].comments.push({\n    username: username,\n    text: text\n  });\n  res.status(200).send(articlesInfo[articleName]);\n});\napp.get('/api/articles/:name/', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var articleName, client, db, _articlesInfo;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            articleName = req.params.name;\n            _context2.next = 4;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true\n            });\n\n          case 4:\n            client = _context2.sent;\n            db = client.db('reactblog');\n            _context2.next = 8;\n            return db.collection('articles').findOne({\n              name: articleName\n            });\n\n          case 8:\n            _articlesInfo = _context2.sent;\n            res.status(200).json(_articlesInfo);\n            client.close();\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error Connecting to db\",\n              e: _context2.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 13]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJhcnRpY2xlTmFtZSIsInBhcmFtcyIsIm5hbWUiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJkYiIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiYXJ0aWNsZUluZm8iLCJ1cGRhdGVPbmUiLCJ1cHZvdGVzIiwidXBkYXRlZEFydGljbGVJbmZvIiwic3RhdHVzIiwiY2xvc2UiLCJtZXNzYWdlIiwiZSIsImJvZHkiLCJ1c2VybmFtZSIsInRleHQiLCJhcnRpY2xlc0luZm8iLCJjb21tZW50cyIsInB1c2giLCJzZW5kIiwiZ2V0IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUVBSCxHQUFHLENBQUNJLElBQUosQ0FBUyw0QkFBVDtBQUFBLHFFQUF1QyxpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR3pCQyxZQUFBQSxXQUh5QixHQUdYRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFIQTtBQUFBO0FBQUEsbUJBS1ZDLHFCQUFZQyxPQUFaLENBQW9CLDJCQUFwQixFQUFpRDtBQUFFQyxjQUFBQSxlQUFlLEVBQUUsSUFBbkI7QUFBeUJDLGNBQUFBLGtCQUFrQixFQUFFO0FBQTdDLGFBQWpELENBTFU7O0FBQUE7QUFLekJDLFlBQUFBLE1BTHlCO0FBTXpCQyxZQUFBQSxFQU55QixHQU1wQkQsTUFBTSxDQUFDQyxFQUFQLENBQVUsV0FBVixDQU5vQjtBQUFBO0FBQUEsbUJBUUxBLEVBQUUs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QixDQUFxQjtBQUFFcUIsY0FBQUEsT0FBTyxFQUFFLHdCQUFYO0FBQXFDQyxjQUFBQSxDQUFDO0FBQXRDLGFBQXJCOztBQWJ3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWtCQXpCLEdBQUcsQ0FBQ2tDLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVosQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc2VuYXJ1XFxsaW5rZWRpblxccmVhY3RibG9nLWJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJztcclxuXHJcbi8vIGNvbnN0IGFydGljbGVzSW5mbyA9IDtcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuYXBwLnBvc3QoJy9hcGkvYXJ0aWNsZXMvOm5hbWUvdXB2b3RlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuXHJcbiAgICAgICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNycsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfSk7XHJcbiAgICAgICAgY29uc3QgZGIgPSBjbGllbnQuZGIoJ3JlYWN0YmxvZycpO1xyXG5cclxuICAgICAgICBjb25zdCBhcnRpY2xlSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xyXG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykudXBkYXRlT25lKHsgbmFtZTogYXJ0aWNsZU5hbWUgfSwge1xyXG4gICAgICAgICAgICAnJHNldCc6IHtcclxuICAgICAgICAgICAgICAgIHVwdm90ZXM6IGFydGljbGVJbmZvLnVwdm90ZXMgKyAxLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRBcnRpY2xlSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pOztcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkQXJ0aWNsZUluZm8pO1xyXG5cclxuICAgICAgICBjbGllbnQuY2xvc2UoKTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiRXJyb3IgQ29ubmVjdGluZyB0byBkYlwiLCBlIH0pO1xyXG4gICAgfVxyXG59KVxyXG5cclxuYXBwLnBvc3QoJy9hcGkvYXJ0aWNsZXMvOm5hbWUvYWRkLWNvbW1lbnQnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG4gICAgY29uc3QgeyB1c2VybmFtZSwgdGV4dCB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXS5jb21tZW50cy5wdXNoKHsgdXNlcm5hbWUsIHRleHQgfSk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXSk7XHJcbn0pXHJcblxyXG5hcHAuZ2V0KCcvYXBpL2FydGljbGVzLzpuYW1lLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XHJcblxyXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QoJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9KTtcclxuICAgICAgICBjb25zdCBkYiA9IGNsaWVudC5kYigncmVhY3RibG9nJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGFydGljbGVzSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFydGljbGVzSW5mbyk7XHJcblxyXG4gICAgICAgIGNsaWVudC5jbG9zZSgpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJFcnJvciBDb25uZWN0aW5nIHRvIGRiXCIsIGUgfSk7XHJcbiAgICB9XHJcblxyXG59KVxyXG5cclxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IDgwMDBcIikpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "post",
        "req",
        "res",
        "articleName",
        "params",
        "name",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "db",
        "collection",
        "findOne",
        "articleInfo",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "status",
        "close",
        "message",
        "e",
        "body",
        "username",
        "text",
        "articlesInfo",
        "comments",
        "push",
        "send",
        "get",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\senaru\\linkedin\\reactblog-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\n\r\n// const articlesInfo = ;\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.post('/api/articles/:name/upvote', async (req, res) => {\r\n\r\n    try {\r\n        const articleName = req.params.name;\r\n\r\n        const client = await MongoClient.connect('mongodb://localhost:27017', { useNewUrlParser: true, useUnifiedTopology: true });\r\n        const db = client.db('reactblog');\r\n\r\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\r\n        await db.collection('articles').updateOne({ name: articleName }, {\r\n            '$set': {\r\n                upvotes: articleInfo.upvotes + 1,\r\n            },\r\n        });\r\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });;\r\n        res.status(200).json(updatedArticleInfo);\r\n\r\n        client.close();\r\n    } catch (e) {\r\n        res.status(500).json({ message: \"Error Connecting to db\", e });\r\n    }\r\n})\r\n\r\napp.post('/api/articles/:name/add-comment', (req, res) => {\r\n    const articleName = req.params.name;\r\n    const { username, text } = req.body;\r\n\r\n    articlesInfo[articleName].comments.push({ username, text });\r\n\r\n    res.status(200).send(articlesInfo[articleName]);\r\n})\r\n\r\napp.get('/api/articles/:name/', async (req, res) => {\r\n\r\n    try {\r\n        const articleName = req.params.name;\r\n\r\n        const client = await MongoClient.connect('mongodb://localhost:27017', { useNewUrlParser: true });\r\n        const db = client.db('reactblog');\r\n\r\n        const articlesInfo = await db.collection('articles').findOne({ name: articleName });\r\n        res.status(200).json(articlesInfo);\r\n\r\n        client.close();\r\n    } catch (e) {\r\n        res.status(500).json({ message: \"Error Connecting to db\", e });\r\n    }\r\n\r\n})\r\n\r\napp.listen(8000, () => console.log(\"Listening on port 8000\"));"
      ]
    },
    "sourceType": "script",
    "mtime": 1594448939416
  }
}